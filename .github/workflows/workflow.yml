name: Create Release Branch
on:
  workflow_dispatch:
    inputs:
      source-branch:
        description: 'Source Branch'
        required: true
        default: 'dev'
        type: string
      target-branch:
        description: 'Target Branch'
        required: true
        default: 'main'
        type: choice
        options:
          - main
      mergedSince:
        description: 'From Date: - format: YYYY-MM-DDTHH:MM:SSZ - e.g. 2025-01-7T12:00:00Z'
        required: false
        default: ''
      mergedUntil:
        description: 'To Date: - format: YYYY-MM-DDTHH:MM:SSZ - e.g. 2025-01-14T12:00:00Z'
        required: false
        default: ''
      includePrIds:
        description: 'Default Pr IDs - 782,795,797,771'
        required: false
        default: ''
      excludePattern:
        description: 'Exclude pattern - #86c3rnXzw, #0'
        required: false
        default: ''
env:
  SOURCE_BRANCH: ${{ github.event.inputs.source-branch }}
  TARGET_BRANCH: ${{ github.event.inputs.target-branch }}
  TZ: Europe/Istanbul
permissions: write-all
jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    environment: 'staging'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Critical - fetch full history
          token: ${{ secrets.PR_CREATION_TOKEN }}

      - name: Prepare environment
        id: get_version
        run: |
          current_version=$(jq -r '.version' version.json)
          echo "Current version: $current_version"
          echo "version=$current_version" >> $GITHUB_OUTPUT

      - name: Create Release Branch
        uses: sulhadin/create-release-branch@v1
        with:
          source-branch: ${{ github.event.inputs.source-branch }}
          target-branch: ${{ github.event.inputs.target-branch }}
          current-version: ${{ steps.get_version.outputs.version }}
          github-token: ${{ secrets.PR_CREATION_TOKEN }}
          branch-prefix: "Release/"
          merged-since: ${{ github.event.inputs.mergedSince }}
          merged-until: ${{ github.event.inputs.mergedUntil }}
          include-pr-ids: ${{ github.event.inputs.includePrIds }}
          exclude-pattern: ${{ github.event.inputs.excludePattern }}
          version-file: "version.json"
          verbose: 'false'